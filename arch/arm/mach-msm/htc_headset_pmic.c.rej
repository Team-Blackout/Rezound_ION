--- arch/arm/mach-msm/htc_headset_pmic.c	2013-04-20 02:33:28.183486808 -0700
+++ arch/arm/mach-msm/htc_headset_pmic.c	2013-04-20 02:30:35.373042910 -0700
@@ -461,8 +508,53 @@
 		notifier.func = hs_pmic_key_enable;
 		headset_notifier_register(&notifier);
 	}
+
+
+	if (hi->pdata.key_gpio) {
+		notifier.id = HEADSET_REG_KEY_INT_ENABLE;
+		notifier.func = hs_pmic_key_int_enable;
+		headset_notifier_register(&notifier);
+	}
 }
 
+static ssize_t pmic_adc_debug_show(struct device *dev,
+	struct device_attribute *attr, char *buf)
+{
+	int ret = 0;
+	int adc = 0;
+
+#ifdef HTC_HEADSET_CONFIG_MSM_RPC
+	ret = hs_pmic_remote_adc(&adc);
+#endif
+	HS_DBG("button ADC = %d",adc);
+	return ret;
+}
+
+
+static struct device_attribute dev_attr_pmic_headset_adc =\
+	__ATTR(pmic_adc_debug, 0644, pmic_adc_debug_show, NULL);
+
+int register_attributes(void)
+{
+	int ret = 0;
+	hi->pmic_dev = device_create(hi->htc_accessory_class,
+				NULL, 0, "%s", "pmic");
+	if (unlikely(IS_ERR(hi->pmic_dev))) {
+		ret = PTR_ERR(hi->pmic_dev);
+		hi->pmic_dev = NULL;
+	}
+
+	/*register the attributes */
+	ret = device_create_file(hi->pmic_dev, &dev_attr_pmic_headset_adc);
+	if (ret)
+		goto err_create_pmic_device_file;
+	return 0;
+
+err_create_pmic_device_file:
+	device_unregister(hi->pmic_dev);
+	HS_ERR("Failed to register pmic attribute file");
+	return ret;
+}
 static int htc_headset_pmic_probe(struct platform_device *pdev)
 {
 	int ret = 0;
@@ -488,6 +580,12 @@
 	hi->pdata.hs_controller = pdata->hs_controller;
 	hi->pdata.hs_switch = pdata->hs_switch;
 	hi->pdata.adc_mic = pdata->adc_mic;
+	hi->htc_accessory_class = hs_get_attribute_class();
+	hpin_count_global = 0;
+	register_attributes();
+	INIT_DELAYED_WORK(&detect_pmic_work.hpin_work, detect_pmic_work_func);
+	hrtimer_init(&hi->timer, CLOCK_MONOTONIC, HRTIMER_MODE_REL);
+	hi->timer.function = hs_hpin_irq_enable_func;
 
 	if (!hi->pdata.adc_mic)
 		hi->pdata.adc_mic = HS_DEF_MIC_ADC_16_BIT_MIN;
